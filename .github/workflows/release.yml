name: release
on:
  push:
    tags:
      - '*'

jobs:
  build-release:
    name: Build on 3 platforms
    strategy:
      matrix:
        os: [ ubuntu-18.04, windows-2019, macos-10.15 ]
        include:
          - os: ubuntu-18.04
            os-name: linux
            executable-name: feather-server
          - os: windows-2019
            os-name: windows
            executable-name: feather-server.exe
          - os: macos-10.15
            os-name: macOS
            executable-name: feather-server

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      # Caching
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (release mode)
        run: cargo build --release

      - name: Get tag name
        uses: olegtarasov/get-tag@v2
        id: tagName

      - name: Compress executable
        uses: papeloto/action-zip@v1
        with:
          files: target/release/${{ matrix.executable-name }}
          dest: target/release/feather-${{ steps.tagName.outputs.tag }}-${{ matrix.os-name }}.zip

      - name: Upload release artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: ${{ matrix.os-name }}
          path: target/release/feather-${{ steps.tagName.outputs.tag }}-${{ matrix.os-name }}.zip


  publish:
    name: Publish artifacts to GitHub Releases
    runs-on: ubuntu-latest
    needs: [build-release]

    steps:
      - name: Get tag name
        uses: olegtarasov/get-tag@v2
        id: tagName

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagName.outputs.tag }}
          release_name: Release ${{ steps.tagName.outputs.tag }}
          draft: true

      - name: Download Linux build
        uses: actions/download-artifact@v1
        with:
          name: linux

      - name: Download Windows build
        uses: actions/download-artifact@v1
        with:
          name: windows

      - name: Download macOS build
        uses: actions/download-artifact@v1
        with:
          name: macOS

      - name: Upload Linux package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux/feather-${{ steps.tagName.outputs.tag }}-linux.zip
          asset_name: feather-${{ steps.tagName.outputs.tag }}-linux.zip
          asset_content_type: application/zip

      - name: Upload Windows package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows/feather-${{ steps.tagName.outputs.tag }}-windows.zip
          asset_name: feather-${{ steps.tagName.outputs.tag }}-windows.zip
          asset_content_type: application/zip

      - name: Upload macOS package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macOS/feather-${{ steps.tagName.outputs.tag }}-macOS.zip
          asset_name: feather-${{ steps.tagName.outputs.tag }}-macOS.zip
          asset_content_type: application/zip
